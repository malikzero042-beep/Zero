name: Create 16GB Windows 11 RDP (AWS EC2)

on:
  workflow_dispatch:

env:
  INSTANCE_TYPE: m5.xlarge  # Instance type with 16 GB RAM (AWS m5.xlarge)
  WINDOWS_ADMIN: AdminUser

jobs:
  create-16gb-windows-11:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Display AMI ID and other config
        run: |
          echo "Using AMI ID: ${{ secrets.WINDOWS_11_AMI_ID }}"
          echo "Using Instance Type: ${{ env.INSTANCE_TYPE }}"
          echo "Using Subnet ID: ${{ secrets.SUBNET_ID }}"
          echo "Using Security Group ID: ${{ secrets.SECURITY_GROUP_ID }}"

      - name: Launch EC2 Windows 11 instance
        id: launch
        run: |
          # Launch instance
          AMI_ID="${{ secrets.WINDOWS_11_AMI_ID }}"
          SUBNET_ID="${{ secrets.SUBNET_ID }}"
          SECURITY_GROUP_ID="${{ secrets.SECURITY_GROUP_ID }}"
          KEY_NAME="${{ secrets.KEY_NAME }}"
          INSTANCE_TYPE="${INSTANCE_TYPE}"

          # Debugging: Display configuration
          echo "Launching EC2 instance with the following parameters:"
          echo "AMI ID: $AMI_ID"
          echo "Instance Type: $INSTANCE_TYPE"
          echo "Subnet ID: $SUBNET_ID"
          echo "Security Group ID: $SECURITY_GROUP_ID"
          echo "Key Name: $KEY_NAME"
          
          # Launch the EC2 instance and capture the instance ID
          INSTANCE_ID=$(aws ec2 run-instances \
            --image-id "$AMI_ID" \
            --count 1 \
            --instance-type "$INSTANCE_TYPE" \
            --subnet-id "$SUBNET_ID" \
            --security-group-ids "$SECURITY_GROUP_ID" \
            --key-name "$KEY_NAME" \
            --associate-public-ip-address \
            --tag-specifications "ResourceType=instance,Tags=[{Key=Name,Value=gh-16gb-windows-11-rdp}]" \
            --user-data "$USERDATA" \
            --query 'Instances[0].InstanceId' --output text)

          echo "Instance ID: $INSTANCE_ID" >> $GITHUB_OUTPUT

      - name: Wait for instance to be running
        run: |
          INSTANCE_ID=${{ steps.launch.outputs.instance_id }}
          echo "Waiting for instance $INSTANCE_ID to be running..."
          aws ec2 wait instance-running --instance-ids "$INSTANCE_ID"
          echo "Instance is running."

      - name: Fetch Public IP (if attached)
        id: ip
        run: |
          INSTANCE_ID=${{ steps.launch.outputs.instance_id }}
          PUB_IP=$(aws ec2 describe-instances --instance-ids "$INSTANCE_ID" --query "Reservations[0].Instances[0].PublicIpAddress" --output text)
          echo "Public IP: $PUB_IP" >> $GITHUB_OUTPUT

      - name: Show connection info and instructions
        run: |
          echo "EC2 Instance created: ${{ steps.launch.outputs.instance_id }}"
          echo "Public IP: ${{ steps.ip.outputs.public_ip }}"
          echo "Check the EC2 instance system log for further debugging (AWS Console > EC2 > Instance > Actions > Instance Settings > Get System Log)"
          echo "Check C:\\Windows\\Temp\\tailscale_ip.txt and C:\\Windows\\Temp\\rdp_creds.txt for Tailscale IP and RDP credentials."
